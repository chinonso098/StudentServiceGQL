// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentServiceGQL.DataService;

#nullable disable

namespace StudentServiceGQL.Migrations
{
    [DbContext(typeof(StudentServiceContext))]
    [Migration("20220401203437_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("StreetOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.HasIndex("StateID");

                    b.HasIndex("StudentID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = 1,
                            City = "Polmero",
                            IsPrimary = true,
                            StateID = 1,
                            StreetOne = "8564 Fresco Street",
                            StreetTwo = "",
                            StudentID = 1,
                            ZipCode = "96542"
                        },
                        new
                        {
                            AddressID = 3,
                            City = "Fishers",
                            IsPrimary = false,
                            StateID = 1,
                            StreetOne = "2346 Venture Rd",
                            StreetTwo = "",
                            StudentID = 1,
                            ZipCode = "96983"
                        },
                        new
                        {
                            AddressID = 2,
                            City = "Nina",
                            IsPrimary = true,
                            StateID = 2,
                            StreetOne = "9621 Pinta Lane",
                            StreetTwo = "",
                            StudentID = 2,
                            ZipCode = "52145"
                        });
                });

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.CollegeProgram", b =>
                {
                    b.Property<int>("CollegeProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollegeProgramID"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CollegeProgramID");

                    b.ToTable("CollegePrograms");

                    b.HasData(
                        new
                        {
                            CollegeProgramID = 1,
                            EndDate = new DateTime(2084, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProgramName = "Mathematics",
                            StartDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CollegeProgramID = 2,
                            EndDate = new DateTime(2084, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProgramName = "Physics",
                            StartDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CollegeProgramID = 3,
                            EndDate = new DateTime(2084, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProgramName = "Bio-Chemistry",
                            StartDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CollegeProgramID = 4,
                            EndDate = new DateTime(2084, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProgramName = "Geology",
                            StartDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.State", b =>
                {
                    b.Property<int>("StateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateID");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateID = 1,
                            Name = "New York",
                            ShortName = "NY"
                        },
                        new
                        {
                            StateID = 2,
                            Name = "California",
                            ShortName = "CA"
                        },
                        new
                        {
                            StateID = 3,
                            Name = "Georgia",
                            ShortName = "GA"
                        },
                        new
                        {
                            StateID = 4,
                            Name = "North Dakota",
                            ShortName = "ND"
                        },
                        new
                        {
                            StateID = 5,
                            Name = "South Dakota",
                            ShortName = "SD"
                        },
                        new
                        {
                            StateID = 6,
                            Name = "North Carolina",
                            ShortName = "NC"
                        },
                        new
                        {
                            StateID = 7,
                            Name = "South Carolina",
                            ShortName = "SC"
                        },
                        new
                        {
                            StateID = 8,
                            Name = "Indiana",
                            ShortName = "IN"
                        },
                        new
                        {
                            StateID = 9,
                            Name = "Texas",
                            ShortName = "TX"
                        },
                        new
                        {
                            StateID = 10,
                            Name = "Illinois",
                            ShortName = "IL"
                        });
                });

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"), 1L, 1);

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CollegeProgramID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("CollegeProgramID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            AdmissionDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Age = 38,
                            CollegeProgramID = 3,
                            DoB = new DateTime(1984, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nicholas",
                            LastName = "Gunn",
                            StudentNumber = "9580389442"
                        },
                        new
                        {
                            StudentID = 2,
                            AdmissionDate = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Age = 42,
                            CollegeProgramID = 2,
                            DoB = new DateTime(1979, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Charles",
                            LastName = "Freiderick",
                            StudentNumber = "9580389442"
                        });
                });

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.Address", b =>
                {
                    b.HasOne("StudentServiceGQL.DomainObjects.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentServiceGQL.DomainObjects.Student", "Student")
                        .WithMany("Addresses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.Student", b =>
                {
                    b.HasOne("StudentServiceGQL.DomainObjects.CollegeProgram", "CollegeProgram")
                        .WithMany()
                        .HasForeignKey("CollegeProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollegeProgram");
                });

            modelBuilder.Entity("StudentServiceGQL.DomainObjects.Student", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
